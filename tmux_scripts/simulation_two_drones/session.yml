name: simulation
root: ./
startup_window: goto_start 
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=f450; export WORLD_NAME=simulation; export SENSORS="garmin_down"; export SENSORS="garmin_down"
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch world_name:=grass_plane gui:=true
  - status:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_status status.launch
        - export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-ground-truth --pos_file `pwd`/pos1.yaml --enable-uv-leds --uvled-fr-r 15 --uvled-fr-l 15"
        - waitForSimulation; sleep 10; rosservice call /mrs_drone_spawner/spawn "2 $UAV_TYPE --enable-rangefinder --enable-ground-truth --pos_file `pwd`/pos2.yaml --enable-uv-camera --uvcam-calib-file `rospack find uvdar_core`/include/OCamCalib/config/calib_results_bf_uv_fe.txt"
  - control:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_uav_general core.launch config_constraint_manager:=./custom_configs/constraint_manager.yaml
        - export UAV_NAME=uav2; waitForOdometry; roslaunch mrs_uav_general core.launch config_constraint_manager:=./custom_configs/constraint_manager.yaml
  - automatic_start:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
  - takeoff:
      layout: tiled
      panes:
        # #{ uav1
        - 'export UAV_NAME=uav1;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
        # #{ uav2
        - 'export UAV_NAME=uav2;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
  - rviz:
      layout: tiled
      synchronize: after
      panes:
        - 'history -s roslaunch mrs_uav_testing tf_connector_avoidance.launch'
        - 'export UAV_NAME=uav1; history -s roslaunch mrs_rviz_plugins load_robot.launch'
        - 'export UAV_NAME=uav2; history -s roslaunch mrs_rviz_plugins load_robot.launch'
        - 'history -s roslaunch uvdar_leader_follower rviz.launch'
  - update_controllers:
      layout: tiled
      panes:
        # leader will not avoid collisions
        - export UAV_NAME=uav1; waitForControl; sleep 7; rosservice call /$UAV_NAME/control_manager/mpc_tracker/collision_avoidance 0
  #       - export UAV_NAME=uav2; waitForControl; rosservice call /$UAV_NAME/constraint_manager/set_constraints uvdar
  #       # you can experiment with controller settings by changing the follower constraints to medium. Beware: faster acceleration will produce more tilt -> less stable camera image
  - uv_observer:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav2; export TARGET_FREQUENCY_LEDS=15; waitForControl; roslaunch uvdar_leader_follower single_frequency_uvdar.launch
  - kalman_filter:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav2; waitForControl; roslaunch uvdar_core uvdar_kalman_identified.launch output_frame:=$UAV_NAME/stable_origin
  - goto_start:
      layout: even-vertical
      synchronize: after
      panes:
        - 'export UAV_NAME=uav1; history -s $(echo waitForControl\; roslaunch uvdar_leader_follower load_leader_trajectory.launch\; sleep 2\; rosservice call /$UAV_NAME/control_manager/goto_trajectory_start)
          '
        - 'export UAV_NAME=uav2; history -s $(echo waitForControl\; rosservice call /$UAV_NAME/control_manager/goto \"\[11.5, 4.5, 3.2, 0.0\]\")
          '
  - follower:
      layout: even-vertical
      panes:
        - 'export UAV_NAME=uav2;
          history -s roslaunch summer_school_supervisor supervisor.launch debug:=false leader_uav:=uav1 follower_uav:=uav2'
  - start_challenge:
      layout: even-vertical
      synchronize: after
      panes:
        - 'export UAV_NAME=uav1;
          history -s rosservice call /$UAV_NAME/control_manager/start_trajectory_tracking'
        - 'export UAV_NAME=uav2;
          history -s rosservice call /$UAV_NAME/summer_school_supervisor/start_score_counting'
  - gazebo_camera_follow:
      layout: tiled
      panes:
        - waitForOdometry; sleep 8; gz camera -c gzclient_camera -f uav2
        - waitForControl; sleep 5; ~/.i3/layout_manager.sh layout.json
